---
import type { Post } from "../../class/Post";
import PostComponent from "../../components/PostComponent.astro";
import UserRecommendation from "../../components/UserRecommendation.astro";
import Layout from "../../layouts/Layout.astro";
import { AuthService } from "../../services/AuthService";
import { PostService } from "../../services/PostService";
import { UserService } from "../../services/UserService";

const token = Astro.cookies.get("token")?.value;
if (!token) {
  Astro.redirect("/login");
}

let currentUser = null;
let posts;
try {
  currentUser = await UserService.fetchCurrentUser(token!);
} catch (error) {
  console.error("Error fetching current user:", error);
  try {
    await AuthService.refreshToken(token!);
  } catch (error) {
    console.error("Error refreshing token:", error);
    return Astro.redirect("/login");
  }
}
if (currentUser) {
  try {
    posts = await PostService.fetchPostsByUserId(currentUser!.id, token!);
  } catch (error) {
    console.error("Error fetching posts", error);
    return Astro.redirect("/");
  }
}
---

<Layout>
  <section class="flex flex-col gap-4 py-4 w-3/4 border-x border-primary">
    <div class="flex flex-col">
      <h1 class="text-2xl text-primary font-bold pl-4 py-2">Your Profile</h1>
    </div>

    <div class="flex flex-col gap-4 ml-4">
      <img
        src={currentUser?.profileImageUrl || "/logo.svg"}
        alt="Profile Picture"
        class="h-24 w-24 rounded-full"
      />
      <div class="flex flex-col gap-5">
        <div>
          <h2 class="text-xl text-primary font-bold">
            {currentUser?.displayName}
          </h2>
          <p class="text-lg text-primary">{currentUser?.userTag}</p>
        </div>
        <div>
          <a href="/profile/followers" class="text-primary hover:underline"
            >Followers</a
          >
          <span class="mx-2 text-primary font-semibold">|</span>
          <a href="/profile/following" class="text-primary hover:underline"
            >Following</a
          >
        </div>
      </div>
    </div>
    <div
      class={`border-t border-primary w-full h-full mt-4 ${!posts || posts.length === 0 ? " text-8xl flex items-center justify-center text-primary" : ""}`}
    >
      {
        posts && posts.length > 0 ? (
          posts.map((post: Post) => <PostComponent post={post} />)
        ) : (
          <p>Start posting today!</p>
        )
      }
    </div>
  </section>
  <UserRecommendation />
</Layout>
