---
const { post } = Astro.props;
---
<div class="w-full border-b-[1px] border-primary p-2 h-fit">
    <div class="flex items-center gap-2">
        <img src="/logo.svg" alt="user picture" class="h-10 w-10 rounded-full" />
        <div class="flex flex-col justify-center">
            <h1 class="text-primary font-semibold text-lg">{post.userName}</h1>
            <p class="text-sm text-gray-500 -mt-1.5">{post.userID}</p>
        </div>
    </div>
    <div class="ml-8 px-4 -mt-2">
        <h1 class="text-primary text-lg mt-4">{post.title}</h1>
        <p class="text-sm text-gray-500">{post.description}</p>
    </div>
    
    {post.images?.length !== 3 ? 
            <div class={`grid ${post.images?.length>=2?'grid-cols-2':''} ${ post.images?.length>2?'grid-rows-2':''} max-h-80 gap-2 m-4 ml-8`}>
                {
                    post.images?.map((image: string, index: number) => (
                        <img 
                            src={image} 
                            alt={`post image ${index + 1}`} 
                            class="relative w-full h-40 object-cover rounded-lg"
                        />
                    ))
                }
            </div>
        : (
            <div class="grid grid-cols-2 grid-rows-2 gap-2 h-80 m-4 ml-8">
                
                    <img 
                        src={post.images?.[0]} 
                        alt={`post image 0`} 
                        class="relative w-full h-full row-span-2 object-cover rounded-lg"
                    />
                    {
                        post.images?.slice(1).map((image: string, index: number) => (
                            <img 
                                src={image} 
                                alt={`post image ${index + 1}`} 
                                class="relative w-full h-full object-cover rounded-lg"
                            />
                        ))
                    }
            </div>
        )}

</div>
